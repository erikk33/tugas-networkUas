Program tersebut menggunakan berbagai metode untuk mencapai fungsionalitas yang diinginkan. Berikut adalah penjelasan metode-metode yang digunakan di program ini:

 1. Metode untuk Mengirim Email
- `smtplib.SMTP`: Menghubungkan ke server SMTP untuk mengirim email.
- `smtplib.SMTP.starttls()`: Memulai komunikasi yang aman dengan server SMTP.
- `smtplib.SMTP.login()`: Login ke server SMTP menggunakan kredensial pengguna.
- `smtplib.SMTP.sendmail()`: Mengirim email ke penerima yang ditentukan.
- `smtplib.SMTP.quit()`: Menutup koneksi dengan server SMTP.

 2. Metode untuk Menerima Email
- `imaplib.IMAP4_SSL`: Menghubungkan ke server IMAP dengan SSL untuk mengambil email.
- `imaplib.IMAP4_SSL.login()`: Login ke server IMAP menggunakan kredensial pengguna.
- `imaplib.IMAP4_SSL.select()`: Memilih kotak surat yang ingin diakses (misalnya, "inbox").
- `imaplib.IMAP4_SSL.search()`: Mencari email dalam kotak surat yang dipilih.
- `imaplib.IMAP4_SSL.fetch()`: Mengambil email dari server berdasarkan ID email.
- `imaplib.IMAP4_SSL.close()`: Menutup akses ke kotak surat.
- `imaplib.IMAP4_SSL.logout()`: Logout dari server IMAP.

 3. Metode untuk Mengurai Email
- `email.message_from_bytes()`: Mengurai email yang diterima dari format byte ke objek pesan email.
- `email.header.decode_header()`: Mendekode header email seperti subjek.
- `email.message.Message.is_multipart()`: Mengecek apakah email memiliki beberapa bagian (misalnya, teks dan HTML).
- `email.message.Message.get_payload()`: Mengambil payload (konten) dari pesan email.

 4. Metode untuk GUI Menggunakan Tkinter
- `tk.Tk()`: Membuat instance dari jendela utama aplikasi Tkinter.
- `tk.Toplevel()`: Membuat jendela baru yang merupakan anak dari jendela utama.
- `tk.Label()`: Membuat label teks di GUI.
- `tk.Entry()`: Membuat field input teks di GUI.
- `tk.Button()`: Membuat tombol di GUI.
- `tk.Listbox()`: Membuat listbox untuk menampilkan daftar item.
- `tk.scrolledtext.ScrolledText()`: Membuat widget teks dengan scrollbar.
- `tk.messagebox.showinfo()`: Menampilkan kotak dialog informasi.
- `tk.messagebox.showerror()`: Menampilkan kotak dialog error.
- `tk.Listbox.bind()`: Mengikat event (misalnya, klik) ke widget listbox.

 5. Metode untuk Menjalankan Fungsi di Thread Terpisah
- `threading.Thread()`: Membuat thread baru untuk menjalankan fungsi secara paralel.
- `threading.Thread.start()`: Memulai eksekusi fungsi di thread terpisah.

 6. Metode untuk Penundaan
- `time.sleep()`: Menunda eksekusi selama sejumlah detik yang ditentukan.

 Ringkasan Fungsi-Fungsi Utama

# Fungsi `kirim_email`
Mengirim email dari pengirim ke penerima dengan subjek dan body yang ditentukan. Menggunakan metode SMTP untuk menghubungkan ke server Gmail dan mengirim email.

# Fungsi `terima_email`
Mengambil email terbaru dari kotak masuk pengguna. Menggunakan metode IMAP untuk menghubungkan ke server Gmail dan mengambil email. Email yang diambil kemudian diurai dan ditampilkan dalam `Listbox`.

# Fungsi `update_email`
Memanggil `terima_email` secara berkala setiap 3 detik untuk memperbarui daftar email terbaru.

# Fungsi `show_email`
Menampilkan isi email yang dipilih dari `Listbox` dalam kotak dialog.

# Fungsi `klik_menu`
Menangani pilihan menu dan memanggil fungsi yang sesuai berdasarkan pilihan pengguna.

# Fungsi `start_realtime_email_check`
Memulai pengecekan email real-time dengan menjalankan `update_email` di thread terpisah.

# Fungsi `kirim_email_menu`
Menampilkan jendela baru untuk input detail email yang akan dikirim. Setelah detail diisi, memanggil `kirim_email` untuk mengirim email.

 Kesimpulan
Program ini menggunakan berbagai metode dari pustaka `smtplib`, `imaplib`, `email`, `tkinter`, `threading`, dan `time` untuk menciptakan aplikasi klien email sederhana yang memungkinkan pengguna mengirim dan menerima email melalui GUI. Metode-metode ini digunakan untuk berinteraksi dengan server email, mengurai konten email, serta membuat dan mengelola antarmuka pengguna.